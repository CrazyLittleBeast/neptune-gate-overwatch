//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASMGH_MyAttendance.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AttendanceEntities : DbContext
    {
        public AttendanceEntities()
            : base("name=AttendanceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<emp_attendance> emp_attendance { get; set; }
    
        public virtual ObjectResult<string> usp_getName(Nullable<int> emp_number)
        {
            var emp_numberParameter = emp_number.HasValue ?
                new ObjectParameter("emp_number", emp_number) :
                new ObjectParameter("emp_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_getName", emp_numberParameter);
        }
    
        public virtual ObjectResult<attendace> usp_GetAttendance(Nullable<int> emp_num, string emp_TimeTable, Nullable<int> month, Nullable<int> year)
        {
            var emp_numParameter = emp_num.HasValue ?
                new ObjectParameter("emp_num", emp_num) :
                new ObjectParameter("emp_num", typeof(int));
    
            var emp_TimeTableParameter = emp_TimeTable != null ?
                new ObjectParameter("emp_TimeTable", emp_TimeTable) :
                new ObjectParameter("emp_TimeTable", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<attendace>("usp_GetAttendance", emp_numParameter, emp_TimeTableParameter, monthParameter, yearParameter);
        }
    }
}
